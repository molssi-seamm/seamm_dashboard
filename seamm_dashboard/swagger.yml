openapi: 3.0.0
info:
  title: SEAMM Dashboard API
  description: This is an API for the SEAMM dashboard.
  contact:
    email: janash@vt.edu
  version: "1.1.0"
servers: 
  - url: /api
paths:
  /jobs:
    get:
      summary: searches jobs database
      description: 
        Get jobs that the current user has permission to read.
      operationId: seamm_dashboard.routes.api.get_jobs
      parameters:
      - name: description
        in: query
        description: search job description
        required: false
        schema:
          type: string
      - name: title
        in: query
        description: Search job by title
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of records to return.
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: sortby
        in: query
        description: sort by job id or last modified time.
        required: false
        schema:
          type: string
          enum: [id, last_update]
      - name: order
        in: query
        description: How to sort the jobs.
        schema: 
          type: string
          enum: [asc, desc]
      - name: only
        in: query
        description: fields to return
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
    post:
      summary: submit a job
      description: 
        Submits a new job to the system
      operationId: seamm_dashboard.routes.api.add_job
      requestBody:
        description: The job being submitted.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowchart
              properties:
                username:
                  type: string
                project:
                  type: string
                flowchart:
                  type: string
                title:
                  type: string
                description:
                  type: string
      responses:
        "201":
          description: job data added to database
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 53
                  path:
                    type: string
                    format: filepath
                    example: /Users/username/seamm/projects/username/Job000053
        "400":
          description: bad input parameter
        "403":
          description: user doesn't have permission to add job.
        "422":
          description: error validating job data
  /jobs/{id}:
    get:
      summary: searches jobs database by id
      description: 
        Get job by ID. The job will only be returned if the user has permission to read the job.
      operationId: seamm_dashboard.routes.api.get_job
      parameters:
      - name: id
        in: path
        description: retrieve job by id.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
    put:
      operationId: seamm_dashboard.routes.api.update_job
      parameters:
      - name: id
        in: path
        description: update job by id.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Job values to update
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          description: item updated
        "400":
          description: invalid input, object invalid
    delete:
      operationId: seamm_dashboard.routes.api.delete_job
      parameters:
      - name: id
        in: path
        description: ID of the job to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Job deleted successfully.
        "404":
          description: Job not found.
  /jobs/{id}/files:
    get:
      summary: returns json of files associated with a particular job
      description: 
        Get job files.
      operationId: seamm_dashboard.routes.api.get_job_files
      parameters:
      - name: id
        in: path
        description: Retrieve files for job by ID.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: search results matching criteria
        "400":
          description: bad input parameter
        "401":
          description: not authorized
    post:
      summary: Upload a file
      description: |
        Upload a file
      operationId: seamm_dashboard.routes.api.add_file_to_job
      parameters:
      - name: id
        in: path
        description: the job to add files to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: The file uploaded.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: path to file
          content:
            application/json:
              schema:
                properties:
                  path:
                    type: string
                    example: data/mydir_my_file.txt
        "400":
          description: bad input parameter
        "403":
          description: user not registered
    post:
      tags:
      - developers
      summary: Upload a file
      description: |
        Upload a file
      operationId: seamm_dashboard.routes.api.add_file_to_job
      parameters:
      - name: id
        in: path
        description: the job to add files to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: The file uploaded.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: path to file
          content:
            application/json:
              schema:
                properties:
                  path:
                    type: string
                    example: data/mydir_my_file.txt
        "400":
          description: bad input parameter
        "403":
          description: user not registered
  /jobs/{id}/files/download:
    get:
      summary: downloads job directory as a zip file
      description: 
        Get job files.
      operationId: seamm_dashboard.routes.api.download_job_files
      parameters:
      - name: id
        in: path
        description: Retrieve files for job by ID.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: filename
        in: query
        schema: 
          type: string
        description: Retrieve a particular file.
      responses:
        "200":
          description: search results matching criteria
        "400":
          description: bad input parameter
        "401":
          description: not authorized
  /flowcharts:
    get:
      summary: searches flowcharts database
      description: 
        Get flowcharts
      operationId: seamm_dashboard.routes.api.get_flowcharts
      parameters:
            - name: description
              in: query
              description: search job description
              required: false
              schema:
                type: string
            - name: title
              in: query
              description: Search job by title
              required: false
              schema:
                type: string
            - name: limit
              in: query
              description: maximum number of records to return.
              required: false
              schema:
                minimum: 1
                type: integer
                format: int32
            - name: order
              in: query
              description: How to sort the jobs.
              schema: 
                type: string
                enum: [asc, desc]
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
    post:
      summary: add a flowchart to the datastore
      description: Adds a flowchart to the datastore
      operationId: seamm_dashboard.routes.api.add_flowchart
      requestBody:
        description: The flowchart being submitted.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
            description: successful
            content:
              application/json:
                schema:
                  properties:
                    id:
                      type: integer
                      example: 53
                    path:
                      type: string
                      format: filepath
                      example: /Users/username/seamm/projects/username/Job000053
        "400":
          description: bad input parameter
        "403":
          description: user doesn't have permission to add flowchart.
        "422":
          description: error validating job data
  /flowcharts/{id}:
    get:
      summary: searches database by flowchart id
      description: Get flowchart by ID.
      operationId: seamm_dashboard.routes.api.get_flowchart
      parameters:
      - name: id
        in: path
        description: retrieve flowchart by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowchart'
        "400":
          description: bad input parameter
  /flowcharts/{id}/cytoscape:
    get:
      summary: searches database by flowchart id and retrieves representation for cytoscape
      description: searches database by flowchart id and retrieves representation for cytoscape
      operationId: seamm_dashboard.routes.api.get_cytoscape
      parameters:
      - name: id
        in: path
        description: retrieve flowchart by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowchart'
        "400":
          description: bad input parameter
  /projects:
    get:
      summary: searches projects database
      description: get projects
      operationId: seamm_dashboard.routes.api.get_projects
      parameters:
      - name: description
        in: query
        schema: 
          type: string
        description: Search within project description.
      - name: name
        in: query
        schema: 
          type: string
        description: Search within project name.
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        "400":
          description: bad input parameter
    post:
      summary: create a new project
      description: Creates a new project in the datastore
      operationId: seamm_dashboard.routes.api.add_project
      requestBody:
        description: The new project
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        "201":
          description: name of the project
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                    example: new_project
        "400":
          description: bad input parameter
        "403":
          description: user not registered
  /projects/list:
    get:
      summary: a list of project names
      description: get a list of project names
      operationId: seamm_dashboard.routes.api.list_projects
      parameters:
      - name: description
        in: query
        schema: 
          type: string
        description: Search within project description.
      - name: name
        in: query
        schema: 
          type: string
        description: Search within project name.
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: list of projects by name
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: bad input parameter
  /projects/{id}:
    get:
      summary: searches database by project id
      description: Get project by ID.
      operationId: seamm_dashboard.routes.api.get_project
      parameters:
      - name: id
        in: path
        description: retrieve project by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        "400":
          description: bad input parameter
    put:
      operationId: seamm_dashboard.routes.api.update_project
      parameters:
      - name: id
        in: path
        description: update project by id.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Project values to update
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          description: item updated
        "400":
          description: invalid input, object invalid
    delete:
      operationId: seamm_dashboard.routes.api.delete_project
      parameters:
      - name: id
        in: path
        description: ID of the project to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Project deleted successfully.
        "404":
          description: Project not found.
  /projects/{id}/jobs:
    get:
      summary: retrieves jobs associated with a project
      description: Get jobs associated with a project by project ID.
      operationId: seamm_dashboard.routes.api.get_project_jobs
      parameters:
      - name: id
        in: path
        description: retrieve project by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
  /groups:
    get:
      tags:
      - admin
      - managers
      summary: retrieves dashboard groups
      operationId: seamm_dashboard.routes.api.get_groups
      responses:
        "200":
          description: groups listed
        "403":
          description: permission denied 
  /roles:
    get:
      tags:
      - admin
      - managers
      summary: retrieves dashboard groups
      operationId: seamm_dashboard.routes.api.get_roles
      responses:
        "200":
          description: users listed
        "403":
          description: permission denied 
  /users:
    get:
      tags:
      - admin
      summary: retrieves users of dashboard
      description: Get jobs associated with a project by project ID.
      operationId: seamm_dashboard.routes.api.get_users
      responses:
        "200":
          description: users listed
        "403":
          description: permission denied 
    post:
      tags:
      - admins
      summary: create a user
      description: Adds a new user to the dashboard
      operationId: seamm_dashboard.routes.api.add_user
      requestBody:
        description: The username and password of the new user.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: id of created user
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 53
        "400":
          description: bad input parameter
        "403":
          description: user not registered
        "422":
          description: error validating job data
  /status:
    get:
      summary: return the status of the dashboard
      description: Return the status of the dashboard. Currently 'running' but in the future may return other status strings.
      operationId: seamm_dashboard.routes.api.status
      responses:
        "200":
          description: the status
          content:
            text/plain:
              schema:
                type: string
  /api/auth/token/remove:
    get:
      summary: remove auth token.
      operationId: seamm_dashboard.routes.api.remove_auth_token
      responses:
        "200":
          description: successfully logged out
          content:
            text/plain:
              schema:
                type: string
  /auth/token:
    post:
      summary: post username and password and get a token for the current user
      description: Return a token to be used for authentication
      operationId: seamm_dashboard.routes.api.get_auth_token
      requestBody:
        description: The username and password of the new user.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful.
        "400":
          description: Bad credentials
  /auth/token/refresh:
    post:
      summary: Refresh the access token
      description: Return a token to be used for authentication. An old token will be
      operationId: seamm_dashboard.routes.api.refresh_auth_token
      responses:
        "200":
          description: Token refreshed.
        "400":
          description: Bad credentials
components:
  schemas:
    Flowchart:
      required:
      - flowchart_file
      - flowchart_json
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        flowchart_file:
          type: string
        flowchart_json:
          type: string
    Job:
      required:
      - flowchart_id
      - id
      - path
      - submission_date
      type: object
      properties:
        id:
          type: integer
          example: 1
        path:
          type: string
          format: filepath
          example: /Users/username/seamm/projects
        flowchart_id:
          type: string
        submission_date:
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    Project:
      required:
      - id
      - path
      - name
      type: object
      properties:
        id:
          type: integer
          example: 1
        path:
          type: string
          format: filepath
          example: /Users/username/seamm/projects
        name:
          type: string
          example: MyProject
      